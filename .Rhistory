---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
>#### Show any code that is needed to
>#### 1. Load the data (i.e. read.csv())
>#### 2. Process/transform the data (if necessary) into a format suitable for your analysis
First of all, I set the work directory where I stored the data forked from GitHub repo: __rdpeng/RepData_PeerAssessment1__. Then I load the packages I am going to use for this assignment.
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
getwd()
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: yes
---
## Loading and preprocessing the data
>#### Show any code that is needed to
>#### 1. Load the data (i.e. read.csv())
>#### 2. Process/transform the data (if necessary) into a format suitable for your analysis
First of all, I set the work directory where I stored the data forked from GitHub repo: __rdpeng/RepData_PeerAssessment1__. Then I load the packages I am going to use for this assignment.
```{r,echo=TRUE,results='hide',warning=FALSE,message=FALSE}
getwd()
setwd("C:/Users/Scippy/Desktop/WDRStudio/CourseraRR/Assignment1/RepData_PeerAssessment1")
library(dplyr)
library(ggplot2)
library(lattice)
library(grDevices)
library(knitr)
```
The data is stored in a zipped file, so I check its content, list, and unzip it.
```{r, echo=TRUE,results='hide',warning=FALSE}
unzip("./activity.zip", list = TRUE, unzip = "internal")
unzip("./activity.zip", files = NULL, list = FALSE, overwrite = TRUE, junkpaths = FALSE, unzip = "internal", setTimes = FALSE)
```
Once data is unzipped, I use _read.csv2_ function to load the data in R environment. In particular, I set the arguments of this function on the basis of dataset's characteristics.
As the ReadMe file states, dataset is stored in a comma-separated-value (CSV) file. The first row of the file contains variable names, whereas the second variable refers to the date on which the measurement was taken in YYYY-MM-DD date format. I assign loaded data to an object called __activity__ and check its structure that confirms there are a total of 17,568 observations of three variables: __steps__, __date__, and __interval__.
```{r,warning=FALSE}
activity <- read.csv2("./activity.csv", sep = ",", na.strings = "NA", header = TRUE, colClasses = c(NA,"Date",NA))
str(activity)
```
Before answering the second point of the first question, I set my System Locale on English United States. This change allows to use time and date labels readable for english readers (I am Italian, and my System Locale is set on italian language).
```{r,warning=FALSE}
Sys.setlocale(category="LC_TIME",locale="English_United States.1252")
```
## What is mean total number of steps taken per day?
>#### 1. Make a histogram of the total number of steps taken each day
>######_For this part of the assignment, you can ignore the missing values in the dataset._
Using pipe coding provided by __dplyr__ package, I group and summarise
data in order to create a data frame containing two variables: days,
and the total number of steps taken each day.
```{r,warning=FALSE}
StepsByDay <- activity %>% group_by(date) %>% summarise (steps=sum
(steps))
str(StepsByDay)
```
I use _qplot_ function of __ggplot2__ to make the histogram of total number of steps taken each day. I set _fill_ argument to emphasize days with the highest amount of steps: they are the brightest ones in the plot.
```{r histogram,fig.height=5,warning=FALSE}
par(mar=c(5,4,1,1),las=1)
qplot(date, data=StepsByDay, weight=steps, geom="histogram",
binwidth=1, fill=..count.., main = "Total number of steps taken each
day", xlab = "Day", ylab = "Number of steps")
```
As requested by the assignment, I save the plot to a PNG file and place it on the directory called __figure__.
```{r, echo=TRUE,warning=FALSE,results="hide"}
if(!file.exists("./figure")){dir.create("./figure")}
dev.copy(png,file="./figure/plot1.png")
dev.off()
```
>#### 2. What is mean total number of steps taken per day?
Using _summary_ function I calculate the summary statistics of __steps__ variable.
Then I assign Mean and Median to the objects called:__StepsMean__, and __StepsMedian__.
```{r, echo=TRUE,warning=FALSE}
options(scipen=1,digits=7)
StepsStatistics<-summary(StepsByDay$steps)
StepsMean<-StepsStatistics["Mean"]
StepsMedian<-StepsStatistics["Median"]
```
The mean total number of steps taken per day is __`r StepsMean`__, and the median is __`r StepsMedian`__.
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: yes
---
## Loading and preprocessing the data
>#### Show any code that is needed to
>#### 1. Load the data (i.e. read.csv())
>#### 2. Process/transform the data (if necessary) into a format suitable for your analysis
First of all, I set the work directory where I stored the data forked from GitHub repo: __rdpeng/RepData_PeerAssessment1__. Then I load the packages I am going to use for this assignment.
```{r,echo=TRUE,results='hide',warning=FALSE,message=FALSE}
getwd()
setwd("C:/Users/Scippy/Desktop/WDRStudio/CourseraRR/Assignment1/RepData_PeerAssessment1")
library(dplyr)
library(ggplot2)
library(lattice)
library(grDevices)
library(knitr)
```
The data is stored in a zipped file, so I check its content, list, and unzip it.
```{r, echo=TRUE,results='hide',warning=FALSE}
unzip("./activity.zip", list = TRUE, unzip = "internal")
unzip("./activity.zip", files = NULL, list = FALSE, overwrite = TRUE, junkpaths = FALSE, unzip = "internal", setTimes = FALSE)
```
Once data is unzipped, I use _read.csv2_ function to load the data in R environment. In particular, I set the arguments of this function on the basis of dataset's characteristics.
As the ReadMe file states, dataset is stored in a comma-separated-value (CSV) file. The first row of the file contains variable names, whereas the second variable refers to the date on which the measurement was taken in YYYY-MM-DD date format. I assign loaded data to an object called __activity__ and check its structure that confirms there are a total of 17,568 observations of three variables: __steps__, __date__, and __interval__.
```{r,warning=FALSE}
activity <- read.csv2("./activity.csv", sep = ",", na.strings = "NA", header = TRUE, colClasses = c(NA,"Date",NA))
str(activity)
```
Before answering the second point of the first question, I set my System Locale on English United States. This change allows to use time and date labels readable for english readers (I am Italian, and my System Locale is set on italian language).
```{r,warning=FALSE}
Sys.setlocale(category="LC_TIME",locale="English_United States.1252")
```
## What is mean total number of steps taken per day?
>#### 1. Make a histogram of the total number of steps taken each day
>######_For this part of the assignment, you can ignore the missing values in the dataset._
Using pipe coding provided by __dplyr__ package, I group and summarise
data in order to create a data frame containing two variables: days,
and the total number of steps taken each day.
```{r,warning=FALSE}
StepsByDay <- activity %>% group_by(date) %>% summarise (steps=sum
(steps))
str(StepsByDay)
```
I use _qplot_ function of __ggplot2__ to make the histogram of total number of steps taken each day. I set _fill_ argument to emphasize days with the highest amount of steps: they are the brightest ones in the plot.
```{r histogram,fig.height=5,warning=FALSE}
par(mar=c(5,4,1,1),las=1)
qplot(date, data=StepsByDay, weight=steps, geom="histogram",
binwidth=1, fill=..count.., main = "Total number of steps taken each
day", xlab = "Day", ylab = "Number of steps")
```
As requested by the assignment, I save the plot to a PNG file and place it on the directory called __figure__.
```{r, echo=TRUE,warning=FALSE,results="hide",base.dir="./figure"}
if(!file.exists("./figure")){dir.create("./figure")}
dev.copy(png,file="./figure/histogram-1.png")
dev.off()
```
>#### 2. What is mean total number of steps taken per day?
Using _summary_ function I calculate the summary statistics of __steps__ variable.
Then I assign Mean and Median to the objects called:__StepsMean__, and __StepsMedian__.
```{r, echo=TRUE,warning=FALSE}
options(scipen=1,digits=7)
StepsStatistics<-summary(StepsByDay$steps)
StepsMean<-StepsStatistics["Mean"]
StepsMedian<-StepsStatistics["Median"]
```
The mean total number of steps taken per day is __`r StepsMean`__, and the median is __`r StepsMedian`__.
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: yes
---
## Loading and preprocessing the data
>#### Show any code that is needed to
>#### 1. Load the data (i.e. read.csv())
>#### 2. Process/transform the data (if necessary) into a format suitable for your analysis
First of all, I set the work directory where I stored the data forked from GitHub repo: __rdpeng/RepData_PeerAssessment1__. Then I load the packages I am going to use for this assignment.
```{r,echo=TRUE,results='hide',warning=FALSE,message=FALSE}
getwd()
setwd("C:/Users/Scippy/Desktop/WDRStudio/CourseraRR/Assignment1/RepData_PeerAssessment1")
library(dplyr)
library(ggplot2)
library(lattice)
library(grDevices)
library(knitr)
```
The data is stored in a zipped file, so I check its content, list, and unzip it.
```{r, echo=TRUE,results='hide',warning=FALSE}
unzip("./activity.zip", list = TRUE, unzip = "internal")
unzip("./activity.zip", files = NULL, list = FALSE, overwrite = TRUE, junkpaths = FALSE, unzip = "internal", setTimes = FALSE)
```
Once data is unzipped, I use _read.csv2_ function to load the data in R environment. In particular, I set the arguments of this function on the basis of dataset's characteristics.
As the ReadMe file states, dataset is stored in a comma-separated-value (CSV) file. The first row of the file contains variable names, whereas the second variable refers to the date on which the measurement was taken in YYYY-MM-DD date format. I assign loaded data to an object called __activity__ and check its structure that confirms there are a total of 17,568 observations of three variables: __steps__, __date__, and __interval__.
```{r,warning=FALSE}
activity <- read.csv2("./activity.csv", sep = ",", na.strings = "NA", header = TRUE, colClasses = c(NA,"Date",NA))
str(activity)
```
Before answering the second point of the first question, I set my System Locale on English United States. This change allows to use time and date labels readable for english readers (I am Italian, and my System Locale is set on italian language).
```{r,warning=FALSE}
Sys.setlocale(category="LC_TIME",locale="English_United States.1252")
```
## What is mean total number of steps taken per day?
>#### 1. Make a histogram of the total number of steps taken each day
>######_For this part of the assignment, you can ignore the missing values in the dataset._
Using pipe coding provided by __dplyr__ package, I group and summarise
data in order to create a data frame containing two variables: days,
and the total number of steps taken each day.
```{r,warning=FALSE}
StepsByDay <- activity %>% group_by(date) %>% summarise (steps=sum
(steps))
str(StepsByDay)
```
I use _qplot_ function of __ggplot2__ to make the histogram of total number of steps taken each day. I set _fill_ argument to emphasize days with the highest amount of steps: they are the brightest ones in the plot.
```{r histogram,fig.height=5,warning=FALSE}
par(mar=c(5,4,1,1),las=1)
qplot(date, data=StepsByDay, weight=steps, geom="histogram",
binwidth=1, fill=..count.., main = "Total number of steps taken each day", xlab = "Day", ylab = "Number of steps") + theme_bw()
```
As requested by the assignment, I save the plot to a PNG file and place it on the directory called __figure__.
```{r, echo=TRUE,warning=FALSE,results="hide",base.dir="./figure"}
if(!file.exists("./figure")){dir.create("./figure")}
dev.copy(png,file="./figure/histogram-1.png")
dev.off()
```
>#### 2. What is mean total number of steps taken per day?
Using _summary_ function I calculate the summary statistics of __steps__ variable.
Then I assign Mean and Median to the objects called:__StepsMean__, and __StepsMedian__.
```{r, echo=TRUE,warning=FALSE}
options(scipen=1,digits=7)
StepsStatistics<-summary(StepsByDay$steps)
StepsMean<-StepsStatistics["Mean"]
StepsMedian<-StepsStatistics["Median"]
```
The mean total number of steps taken per day is __`r StepsMean`__, and the median is __`r StepsMedian`__.
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
?dev.copy
?knit2html
getwd()
getwd()
getwd()
?opts_chunk$set
?opts_chunk
install.packages("rmarkdown",dep=T)
install.packages("rmarkdown", dep = T)
?scale_fill_brewer
??scale_fill_brewer
?aes
??aes
